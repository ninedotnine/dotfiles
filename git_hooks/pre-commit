#!/bin/bash
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# Purposes: 
# Add an empty line at the end of the file.
# Remove trailing spaces at the end of a line.
# 
# Source: http://eng.wealthfront.com/2011/03/corrective-action-with-gits-pre-commit.html
# Version: 2011-03-08
# Related: http://stackoverflow.com/questions/13223868/how-to-stage-line-by-line-in-git-gui-although-no-newline-at-end-of-file-warnin


# Files (not deleted) in the index
files=$(git diff-index --name-status --cached HEAD | grep -v ^D | cut -c3-)

echo "------------ modified files:"
echo "$files"
echo "------------ end of modified files"

if grep "-q" "[[:space:]]" <<< "$files"; then
    echo "come on, don't put spaces in file names."
    exit 1
fi

for f in $files ; do
    echo "file is $f"
done

if [[ "$files" != "" ]]; then
    for f in $files ; do
        # reject object files
        if [[ "$f" =~ [.](o|hi)$ ]]; then
            echo "should you be committing file $f ?"
            exit 1
        fi

        # don't allow spaces in file names
        if grep "-q" "[[:space:]]" <<< "$f"; then
            echo "come on, don't put spaces in file names."
            exit 1
        fi

        # only examine known text files
        if [[ "$f" =~ [.](c|conf|css|erb|h|hs|html|js|json|log|properties|py|rb|ru|txt|xml|yml)$ ]]; then
            # check that the file ends with a newline
            if [[ "$(tail -c1 $f)" != "" ]]; then
                echo "$f doesn't end in newline."
                exit 1
            fi

            # remove trailing whitespace if it exists
            if grep -q "[[:blank:]]$" $f; then
                sed -i "" -e $'s/[ \t]*$//g' $f
                git add $f
                echo "file contained trailing whitespace. add with `git add -p`"
                exit 1
            fi
        else
            echo "not inspecting file $f"
        fi
    done
fi

echo "cool."
